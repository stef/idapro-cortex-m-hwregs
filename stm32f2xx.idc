#include <idc.idc>
static main(){
add_segm_ex(0xe000e000, 0xe000e00c, 0, 1, 0, 0, 0); set_segm_name(0xe000e000, "SCS"); apply_type(0xe000e000, get_tinfo("InterruptType_Type"), 1);set_name(0xe000e000, "SCS", 2);
add_segm_ex(0xe0000000, 0xe0001000, 0, 1, 0, 0, 0); set_segm_name(0xe0000000, "ITM"); apply_type(0xe0000000, get_tinfo("ITM_Type"), 1);set_name(0xe0000000, "ITM", 2);
add_segm_ex(0xe000edf0, 0xe000ee00, 0, 1, 0, 0, 0); set_segm_name(0xe000edf0, "CoreDebug"); apply_type(0xe000edf0, get_tinfo("CoreDebug_Type"), 1);set_name(0xe000edf0, "CoreDebug", 2);
add_segm_ex(0xe000e010, 0xe000e020, 0, 1, 0, 0, 0); set_segm_name(0xe000e010, "SysTick"); apply_type(0xe000e010, get_tinfo("SysTick_Type"), 1);set_name(0xe000e010, "SysTick", 2);
add_segm_ex(0xe000e100, 0xe000ef04, 0, 1, 0, 0, 0); set_segm_name(0xe000e100, "NVIC"); apply_type(0xe000e100, get_tinfo("NVIC_Type"), 1);set_name(0xe000e100, "NVIC", 2);
add_segm_ex(0xe000ed00, 0xe000ed74, 0, 1, 0, 0, 0); set_segm_name(0xe000ed00, "SCB"); apply_type(0xe000ed00, get_tinfo("SCB_Type"), 1);set_name(0xe000ed00, "SCB", 2);
add_segm_ex(0xe000ed90, 0xe000edbc, 0, 1, 0, 0, 0); set_segm_name(0xe000ed90, "MPU"); apply_type(0xe000ed90, get_tinfo("MPU_Type"), 1);set_name(0xe000ed90, "MPU", 2);
add_segm_ex(0x40000000, 0x40000054, 0, 1, 0, 0, 0); set_segm_name(0x40000000, "TIM2"); apply_type(0x40000000, get_tinfo("TIM_TypeDef"), 1);set_name(0x40000000, "TIM2", 2);
add_segm_ex(0x40000400, 0x40000454, 0, 1, 0, 0, 0); set_segm_name(0x40000400, "TIM3"); apply_type(0x40000400, get_tinfo("TIM_TypeDef"), 1);set_name(0x40000400, "TIM3", 2);
add_segm_ex(0x40000800, 0x40000854, 0, 1, 0, 0, 0); set_segm_name(0x40000800, "TIM4"); apply_type(0x40000800, get_tinfo("TIM_TypeDef"), 1);set_name(0x40000800, "TIM4", 2);
add_segm_ex(0x40000c00, 0x40000c54, 0, 1, 0, 0, 0); set_segm_name(0x40000c00, "TIM5"); apply_type(0x40000c00, get_tinfo("TIM_TypeDef"), 1);set_name(0x40000c00, "TIM5", 2);
add_segm_ex(0x40001000, 0x40001054, 0, 1, 0, 0, 0); set_segm_name(0x40001000, "TIM6"); apply_type(0x40001000, get_tinfo("TIM_TypeDef"), 1);set_name(0x40001000, "TIM6", 2);
add_segm_ex(0x40001400, 0x40001454, 0, 1, 0, 0, 0); set_segm_name(0x40001400, "TIM7"); apply_type(0x40001400, get_tinfo("TIM_TypeDef"), 1);set_name(0x40001400, "TIM7", 2);
add_segm_ex(0x40001800, 0x40001854, 0, 1, 0, 0, 0); set_segm_name(0x40001800, "TIM12"); apply_type(0x40001800, get_tinfo("TIM_TypeDef"), 1);set_name(0x40001800, "TIM12", 2);
add_segm_ex(0x40001c00, 0x40001c54, 0, 1, 0, 0, 0); set_segm_name(0x40001c00, "TIM13"); apply_type(0x40001c00, get_tinfo("TIM_TypeDef"), 1);set_name(0x40001c00, "TIM13", 2);
add_segm_ex(0x40002000, 0x40002054, 0, 1, 0, 0, 0); set_segm_name(0x40002000, "TIM14"); apply_type(0x40002000, get_tinfo("TIM_TypeDef"), 1);set_name(0x40002000, "TIM14", 2);
add_segm_ex(0x40002800, 0x400028a0, 0, 1, 0, 0, 0); set_segm_name(0x40002800, "RTC"); apply_type(0x40002800, get_tinfo("RTC_TypeDef"), 1);set_name(0x40002800, "RTC", 2);
add_segm_ex(0x40002c00, 0x40002c0c, 0, 1, 0, 0, 0); set_segm_name(0x40002c00, "WWDG"); apply_type(0x40002c00, get_tinfo("WWDG_TypeDef"), 1);set_name(0x40002c00, "WWDG", 2);
add_segm_ex(0x40003000, 0x40003010, 0, 1, 0, 0, 0); set_segm_name(0x40003000, "IWDG"); apply_type(0x40003000, get_tinfo("IWDG_TypeDef"), 1);set_name(0x40003000, "IWDG", 2);
add_segm_ex(0x40003800, 0x40003824, 0, 1, 0, 0, 0); set_segm_name(0x40003800, "SPI2"); apply_type(0x40003800, get_tinfo("SPI_TypeDef"), 1);set_name(0x40003800, "SPI2", 2);
add_segm_ex(0x40003c00, 0x40003c24, 0, 1, 0, 0, 0); set_segm_name(0x40003c00, "SPI3"); apply_type(0x40003c00, get_tinfo("SPI_TypeDef"), 1);set_name(0x40003c00, "SPI3", 2);
add_segm_ex(0x40004400, 0x4000441c, 0, 1, 0, 0, 0); set_segm_name(0x40004400, "USART2"); apply_type(0x40004400, get_tinfo("USART_TypeDef"), 1);set_name(0x40004400, "USART2", 2);
add_segm_ex(0x40004800, 0x4000481c, 0, 1, 0, 0, 0); set_segm_name(0x40004800, "USART3"); apply_type(0x40004800, get_tinfo("USART_TypeDef"), 1);set_name(0x40004800, "USART3", 2);
add_segm_ex(0x40004c00, 0x40004c1c, 0, 1, 0, 0, 0); set_segm_name(0x40004c00, "UART4"); apply_type(0x40004c00, get_tinfo("USART_TypeDef"), 1);set_name(0x40004c00, "UART4", 2);
add_segm_ex(0x40005000, 0x4000501c, 0, 1, 0, 0, 0); set_segm_name(0x40005000, "UART5"); apply_type(0x40005000, get_tinfo("USART_TypeDef"), 1);set_name(0x40005000, "UART5", 2);
add_segm_ex(0x40005400, 0x40005424, 0, 1, 0, 0, 0); set_segm_name(0x40005400, "I2C1"); apply_type(0x40005400, get_tinfo("I2C_TypeDef"), 1);set_name(0x40005400, "I2C1", 2);
add_segm_ex(0x40005800, 0x40005824, 0, 1, 0, 0, 0); set_segm_name(0x40005800, "I2C2"); apply_type(0x40005800, get_tinfo("I2C_TypeDef"), 1);set_name(0x40005800, "I2C2", 2);
add_segm_ex(0x40005c00, 0x40005c24, 0, 1, 0, 0, 0); set_segm_name(0x40005c00, "I2C3"); apply_type(0x40005c00, get_tinfo("I2C_TypeDef"), 1);set_name(0x40005c00, "I2C3", 2);
add_segm_ex(0x40006400, 0x40006720, 0, 1, 0, 0, 0); set_segm_name(0x40006400, "CAN1"); apply_type(0x40006400, get_tinfo("CAN_TypeDef"), 1);set_name(0x40006400, "CAN1", 2);
add_segm_ex(0x40006800, 0x40006b20, 0, 1, 0, 0, 0); set_segm_name(0x40006800, "CAN2"); apply_type(0x40006800, get_tinfo("CAN_TypeDef"), 1);set_name(0x40006800, "CAN2", 2);
add_segm_ex(0x40007000, 0x40007008, 0, 1, 0, 0, 0); set_segm_name(0x40007000, "PWR"); apply_type(0x40007000, get_tinfo("PWR_TypeDef"), 1);set_name(0x40007000, "PWR", 2);
add_segm_ex(0x40007400, 0x40007438, 0, 1, 0, 0, 0); set_segm_name(0x40007400, "DAC"); apply_type(0x40007400, get_tinfo("DAC_TypeDef"), 1);set_name(0x40007400, "DAC", 2);
add_segm_ex(0x40010000, 0x40010054, 0, 1, 0, 0, 0); set_segm_name(0x40010000, "TIM1"); apply_type(0x40010000, get_tinfo("TIM_TypeDef"), 1);set_name(0x40010000, "TIM1", 2);
add_segm_ex(0x40010400, 0x40010454, 0, 1, 0, 0, 0); set_segm_name(0x40010400, "TIM8"); apply_type(0x40010400, get_tinfo("TIM_TypeDef"), 1);set_name(0x40010400, "TIM8", 2);
add_segm_ex(0x40011000, 0x4001101c, 0, 1, 0, 0, 0); set_segm_name(0x40011000, "USART1"); apply_type(0x40011000, get_tinfo("USART_TypeDef"), 1);set_name(0x40011000, "USART1", 2);
add_segm_ex(0x40011400, 0x4001141c, 0, 1, 0, 0, 0); set_segm_name(0x40011400, "USART6"); apply_type(0x40011400, get_tinfo("USART_TypeDef"), 1);set_name(0x40011400, "USART6", 2);
add_segm_ex(0x40012000, 0x40012050, 0, 1, 0, 0, 0); set_segm_name(0x40012000, "ADC1"); apply_type(0x40012000, get_tinfo("ADC_TypeDef"), 1);set_name(0x40012000, "ADC1", 2);
add_segm_ex(0x40012100, 0x40012150, 0, 1, 0, 0, 0); set_segm_name(0x40012100, "ADC2"); apply_type(0x40012100, get_tinfo("ADC_TypeDef"), 1);set_name(0x40012100, "ADC2", 2);
add_segm_ex(0x40012200, 0x40012250, 0, 1, 0, 0, 0); set_segm_name(0x40012200, "ADC3"); apply_type(0x40012200, get_tinfo("ADC_TypeDef"), 1);set_name(0x40012200, "ADC3", 2);
add_segm_ex(0x40012300, 0x4001230c, 0, 1, 0, 0, 0); set_segm_name(0x40012300, "ADC"); apply_type(0x40012300, get_tinfo("ADC_Common_TypeDef"), 1);set_name(0x40012300, "ADC", 2);
add_segm_ex(0x40012c00, 0x40012c84, 0, 1, 0, 0, 0); set_segm_name(0x40012c00, "SDIO"); apply_type(0x40012c00, get_tinfo("SDIO_TypeDef"), 1);set_name(0x40012c00, "SDIO", 2);
add_segm_ex(0x40013000, 0x40013024, 0, 1, 0, 0, 0); set_segm_name(0x40013000, "SPI1"); apply_type(0x40013000, get_tinfo("SPI_TypeDef"), 1);set_name(0x40013000, "SPI1", 2);
add_segm_ex(0x40013800, 0x40013824, 0, 1, 0, 0, 0); set_segm_name(0x40013800, "SYSCFG"); apply_type(0x40013800, get_tinfo("SYSCFG_TypeDef"), 1);set_name(0x40013800, "SYSCFG", 2);
add_segm_ex(0x40013c00, 0x40013c18, 0, 1, 0, 0, 0); set_segm_name(0x40013c00, "EXTI"); apply_type(0x40013c00, get_tinfo("EXTI_TypeDef"), 1);set_name(0x40013c00, "EXTI", 2);
add_segm_ex(0x40014000, 0x40014054, 0, 1, 0, 0, 0); set_segm_name(0x40014000, "TIM9"); apply_type(0x40014000, get_tinfo("TIM_TypeDef"), 1);set_name(0x40014000, "TIM9", 2);
add_segm_ex(0x40014400, 0x40014454, 0, 1, 0, 0, 0); set_segm_name(0x40014400, "TIM10"); apply_type(0x40014400, get_tinfo("TIM_TypeDef"), 1);set_name(0x40014400, "TIM10", 2);
add_segm_ex(0x40014800, 0x40014854, 0, 1, 0, 0, 0); set_segm_name(0x40014800, "TIM11"); apply_type(0x40014800, get_tinfo("TIM_TypeDef"), 1);set_name(0x40014800, "TIM11", 2);
add_segm_ex(0x40020000, 0x40020028, 0, 1, 0, 0, 0); set_segm_name(0x40020000, "GPIOA"); apply_type(0x40020000, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40020000, "GPIOA", 2);
add_segm_ex(0x40020400, 0x40020428, 0, 1, 0, 0, 0); set_segm_name(0x40020400, "GPIOB"); apply_type(0x40020400, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40020400, "GPIOB", 2);
add_segm_ex(0x40020800, 0x40020828, 0, 1, 0, 0, 0); set_segm_name(0x40020800, "GPIOC"); apply_type(0x40020800, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40020800, "GPIOC", 2);
add_segm_ex(0x40020c00, 0x40020c28, 0, 1, 0, 0, 0); set_segm_name(0x40020c00, "GPIOD"); apply_type(0x40020c00, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40020c00, "GPIOD", 2);
add_segm_ex(0x40021000, 0x40021028, 0, 1, 0, 0, 0); set_segm_name(0x40021000, "GPIOE"); apply_type(0x40021000, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40021000, "GPIOE", 2);
add_segm_ex(0x40021400, 0x40021428, 0, 1, 0, 0, 0); set_segm_name(0x40021400, "GPIOF"); apply_type(0x40021400, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40021400, "GPIOF", 2);
add_segm_ex(0x40021800, 0x40021828, 0, 1, 0, 0, 0); set_segm_name(0x40021800, "GPIOG"); apply_type(0x40021800, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40021800, "GPIOG", 2);
add_segm_ex(0x40021c00, 0x40021c28, 0, 1, 0, 0, 0); set_segm_name(0x40021c00, "GPIOH"); apply_type(0x40021c00, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40021c00, "GPIOH", 2);
add_segm_ex(0x40022000, 0x40022028, 0, 1, 0, 0, 0); set_segm_name(0x40022000, "GPIOI"); apply_type(0x40022000, get_tinfo("GPIO_TypeDef"), 1);set_name(0x40022000, "GPIOI", 2);
add_segm_ex(0x40023000, 0x4002300c, 0, 1, 0, 0, 0); set_segm_name(0x40023000, "CRC"); apply_type(0x40023000, get_tinfo("CRC_TypeDef"), 1);set_name(0x40023000, "CRC", 2);
add_segm_ex(0x40023800, 0x40023888, 0, 1, 0, 0, 0); set_segm_name(0x40023800, "RCC"); apply_type(0x40023800, get_tinfo("RCC_TypeDef"), 1);set_name(0x40023800, "RCC", 2);
add_segm_ex(0x40023c00, 0x40023c18, 0, 1, 0, 0, 0); set_segm_name(0x40023c00, "FLASH_R"); apply_type(0x40023c00, get_tinfo("FLASH_TypeDef"), 1);set_name(0x40023c00, "FLASH_R", 2);
add_segm_ex(0x40026000, 0x40026010, 0, 1, 0, 0, 0); set_segm_name(0x40026000, "DMA1"); apply_type(0x40026000, get_tinfo("DMA_TypeDef"), 1);set_name(0x40026000, "DMA1", 2);
add_segm_ex(0x40026010, 0x40026028, 0, 1, 0, 0, 0); set_segm_name(0x40026010, "DMA1_Stream0"); apply_type(0x40026010, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026010, "DMA1_Stream0", 2);
add_segm_ex(0x40026028, 0x40026040, 0, 1, 0, 0, 0); set_segm_name(0x40026028, "DMA1_Stream1"); apply_type(0x40026028, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026028, "DMA1_Stream1", 2);
add_segm_ex(0x40026040, 0x40026058, 0, 1, 0, 0, 0); set_segm_name(0x40026040, "DMA1_Stream2"); apply_type(0x40026040, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026040, "DMA1_Stream2", 2);
add_segm_ex(0x40026058, 0x40026070, 0, 1, 0, 0, 0); set_segm_name(0x40026058, "DMA1_Stream3"); apply_type(0x40026058, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026058, "DMA1_Stream3", 2);
add_segm_ex(0x40026070, 0x40026088, 0, 1, 0, 0, 0); set_segm_name(0x40026070, "DMA1_Stream4"); apply_type(0x40026070, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026070, "DMA1_Stream4", 2);
add_segm_ex(0x40026088, 0x400260a0, 0, 1, 0, 0, 0); set_segm_name(0x40026088, "DMA1_Stream5"); apply_type(0x40026088, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026088, "DMA1_Stream5", 2);
add_segm_ex(0x400260a0, 0x400260b8, 0, 1, 0, 0, 0); set_segm_name(0x400260a0, "DMA1_Stream6"); apply_type(0x400260a0, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x400260a0, "DMA1_Stream6", 2);
add_segm_ex(0x400260b8, 0x400260d0, 0, 1, 0, 0, 0); set_segm_name(0x400260b8, "DMA1_Stream7"); apply_type(0x400260b8, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x400260b8, "DMA1_Stream7", 2);
add_segm_ex(0x40026400, 0x40026410, 0, 1, 0, 0, 0); set_segm_name(0x40026400, "DMA2"); apply_type(0x40026400, get_tinfo("DMA_TypeDef"), 1);set_name(0x40026400, "DMA2", 2);
add_segm_ex(0x40026410, 0x40026428, 0, 1, 0, 0, 0); set_segm_name(0x40026410, "DMA2_Stream0"); apply_type(0x40026410, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026410, "DMA2_Stream0", 2);
add_segm_ex(0x40026428, 0x40026440, 0, 1, 0, 0, 0); set_segm_name(0x40026428, "DMA2_Stream1"); apply_type(0x40026428, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026428, "DMA2_Stream1", 2);
add_segm_ex(0x40026440, 0x40026458, 0, 1, 0, 0, 0); set_segm_name(0x40026440, "DMA2_Stream2"); apply_type(0x40026440, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026440, "DMA2_Stream2", 2);
add_segm_ex(0x40026458, 0x40026470, 0, 1, 0, 0, 0); set_segm_name(0x40026458, "DMA2_Stream3"); apply_type(0x40026458, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026458, "DMA2_Stream3", 2);
add_segm_ex(0x40026470, 0x40026488, 0, 1, 0, 0, 0); set_segm_name(0x40026470, "DMA2_Stream4"); apply_type(0x40026470, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026470, "DMA2_Stream4", 2);
add_segm_ex(0x40026488, 0x400264a0, 0, 1, 0, 0, 0); set_segm_name(0x40026488, "DMA2_Stream5"); apply_type(0x40026488, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x40026488, "DMA2_Stream5", 2);
add_segm_ex(0x400264a0, 0x400264b8, 0, 1, 0, 0, 0); set_segm_name(0x400264a0, "DMA2_Stream6"); apply_type(0x400264a0, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x400264a0, "DMA2_Stream6", 2);
add_segm_ex(0x400264b8, 0x400264d0, 0, 1, 0, 0, 0); set_segm_name(0x400264b8, "DMA2_Stream7"); apply_type(0x400264b8, get_tinfo("DMA_Stream_TypeDef"), 1);set_name(0x400264b8, "DMA2_Stream7", 2);
add_segm_ex(0x40028000, 0x40029058, 0, 1, 0, 0, 0); set_segm_name(0x40028000, "ETH"); apply_type(0x40028000, get_tinfo("ETH_TypeDef"), 1);set_name(0x40028000, "ETH", 2);
add_segm_ex(0x50050000, 0x5005002c, 0, 1, 0, 0, 0); set_segm_name(0x50050000, "DCMI"); apply_type(0x50050000, get_tinfo("DCMI_TypeDef"), 1);set_name(0x50050000, "DCMI", 2);
add_segm_ex(0x50060000, 0x50060050, 0, 1, 0, 0, 0); set_segm_name(0x50060000, "CRYP"); apply_type(0x50060000, get_tinfo("CRYP_TypeDef"), 1);set_name(0x50060000, "CRYP", 2);
add_segm_ex(0x50060400, 0x500605c4, 0, 1, 0, 0, 0); set_segm_name(0x50060400, "HASH"); apply_type(0x50060400, get_tinfo("HASH_TypeDef"), 1);set_name(0x50060400, "HASH", 2);
add_segm_ex(0x50060800, 0x5006080c, 0, 1, 0, 0, 0); set_segm_name(0x50060800, "RNG"); apply_type(0x50060800, get_tinfo("RNG_TypeDef"), 1);set_name(0x50060800, "RNG", 2);
add_segm_ex(0xa0000000, 0xa0000020, 0, 1, 0, 0, 0); set_segm_name(0xa0000000, "FSMC_Bank1_R"); apply_type(0xa0000000, get_tinfo("FSMC_Bank1_TypeDef"), 1);set_name(0xa0000000, "FSMC_Bank1_R", 2);
add_segm_ex(0xa0000104, 0xa0000120, 0, 1, 0, 0, 0); set_segm_name(0xa0000104, "FSMC_Bank1E_R"); apply_type(0xa0000104, get_tinfo("FSMC_Bank1E_TypeDef"), 1);set_name(0xa0000104, "FSMC_Bank1E_R", 2);
add_segm_ex(0xa0000060, 0xa0000078, 0, 1, 0, 0, 0); set_segm_name(0xa0000060, "FSMC_Bank2_R"); apply_type(0xa0000060, get_tinfo("FSMC_Bank2_TypeDef"), 1);set_name(0xa0000060, "FSMC_Bank2_R", 2);
add_segm_ex(0xa0000080, 0xa0000098, 0, 1, 0, 0, 0); set_segm_name(0xa0000080, "FSMC_Bank3_R"); apply_type(0xa0000080, get_tinfo("FSMC_Bank3_TypeDef"), 1);set_name(0xa0000080, "FSMC_Bank3_R", 2);
add_segm_ex(0xa00000a0, 0xa00000b4, 0, 1, 0, 0, 0); set_segm_name(0xa00000a0, "FSMC_Bank4_R"); apply_type(0xa00000a0, get_tinfo("FSMC_Bank4_TypeDef"), 1);set_name(0xa00000a0, "FSMC_Bank4_R", 2);
add_segm_ex(0xe0042000, 0xe0042010, 0, 1, 0, 0, 0); set_segm_name(0xe0042000, "DBGMCU"); apply_type(0xe0042000, get_tinfo("DBGMCU_TypeDef"), 1);set_name(0xe0042000, "DBGMCU", 2);
}
